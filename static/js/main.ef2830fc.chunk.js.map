{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Api/api.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","App.js","index.js"],"names":["Searchbar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","image","openModal","webformatURL","tags","id","onClick","src","alt","ImageGallery","images","map","fetchImages","query","pageNumber","fetch","then","res","json","data","hits","MODAL_ROOT","document","querySelector","Modal","handleKeyPress","console","log","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","children","createPortal","Button","Loader","App","isLoading","isModalOpen","largeImageId","largeImage","onSearch","fetchImagesWithScroll","scroll","api","catch","finally","firstLoadedImage","y","getElementById","getBoundingClientRect","top","scrollY","scrollTo","behavior","prevProps","prevState","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef2830fc.chunk.js","sourcesContent":["import  { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Searchbar.css';\r\nexport default class Searchbar extends Component {\r\n  state = { search: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ search: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n      if (this.state.search.trim() === '') {\r\n         \r\n          return  toast.error('Введите тематику картинок !');\r\n    }\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState({ search: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\" >Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.search}\r\n            name=\"search\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ image, openModal }) => {\r\n  const { webformatURL, tags } = image;\r\n\r\n  return (\r\n    <li   id={image.id} onClick={openModal}  className = 'ImageGalleryItem'>\r\n      <img\r\n        className =\"ImageGalleryItem-image \"\r\n        src={webformatURL}\r\n        alt={tags}\r\n      \r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;\r\n\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ images, openModal}) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem  openModal={openModal} key={image.id} image={image} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\n","export const fetchImages = (query = '', pageNumber = 1) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${query}&page=${pageNumber}&key=23318810-108b3ea994e39ab45f238c241&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data.hits);\r\n};\r\n\r\nexport { fetchImages as default };","import React, { Component } from \"react\";\r\nimport './Modal.css';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst MODAL_ROOT = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\ncomponentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    console.log(e);\r\n\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n    };\r\n    \r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n\r\n    };\r\n    render() {\r\n        const { children } = this.props;\r\n        return createPortal(<div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n            <div className=\"Modal\">{children}</div>\r\n            \r\n        </div>,\r\n            MODAL_ROOT,\r\n        );\r\n\r\n}\r\n\r\n}","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({ fetchImages }) => (\r\n  <button type=\"button\" className = 'Button' onClick={fetchImages}>\r\n    Load more...\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst Loader = () => <div>Loading...</div>;\r\n\r\nexport default Loader;","import './index.css';\nimport './App.css';\nimport { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { ToastContainer } from 'react-toastify';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport * as api from './components/Api/api';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\n\n\nexport default class App extends Component{\n    state = {\n    images: [],\n    pageNumber: 1,\n    search: '',\n    error: '',\n    isLoading: false,\n    isModalOpen: false,\n    largeImageId: null,\n    largeImage: '',\n    };\n\n\n  componentDidMount() {}\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.search !== this.state.search) {\n      this.fetchImages(false);\n    }\n  }\n\n  onSearch = search => {\n    this.setState({ search, images: [], pageNumber: 1 });\n  };\n\n  fetchImagesWithScroll = () => {\n    this.fetchImages(true);\n  };\n\n  fetchImages = scroll => {\n    this.setState({ isLoading: true });\n    const { search, pageNumber } = this.state;\n    api\n      .fetchImages(search, pageNumber)\n      .then(images => {\n        this.setState(state => ({\n          images: [...state.images, ...images],\n          pageNumber: state.pageNumber + 1,\n        }));\n        return images[0];\n      })\n      .catch(error => {\n        this.setState({ error });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      })\n      .then(firstLoadedImage => {\n        if (scroll) {\n          const { id } = firstLoadedImage;\n\n          const y =\n            document.getElementById(id).getBoundingClientRect().top +\n            window.scrollY -\n            80;\n          window.scrollTo({\n            top: y,\n            behavior: 'smooth',\n          });\n        }\n      });\n  };\n  openModal = () => {\n    this.setState(({ isModalOpen }) => ({\n      isModalOpen: !isModalOpen,\n    })\n    )\n  };\n\n \n  render() {\n    const { isLoading, images, isModalOpen, largeImage } = this.state;\n\n    return (\n      <div >\n        <ToastContainer/>\n        <Searchbar onSubmit={this.onSearch} />\n        <ImageGallery openModal={this.openModal} images={images} />\n        {isLoading && <Loader />}\n        {images.length > 0 && (\n          <Button fetchImages={this.fetchImagesWithScroll} />\n        )}\n        {isModalOpen && (\n          <Modal onClose={this.openModal} >\n            <img src={largeImage} alt=\"\"></img>\n          </Modal>\n         ) }\n        \n      </div>\n    );\n  }\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}